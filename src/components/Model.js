/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

import { useFrame } from '@react-three/fiber'

export default function Model(props) {
    const group = useRef()
    const { nodes, materials } = useGLTF('/hamster.glb')
 
    useFrame((state, delta) => (group.current.rotation.y += 0.009))

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="NECK"
          castShadow
          receiveShadow
          geometry={nodes.NECK.geometry}
          material={materials['Material.007']}
          position={[0.00735771, 5.58357716, 0.36983809]}
          rotation={[-0.29974015, 0.08215367, 0.04442919]}
          scale={[0.20765758, 0.20765758, 0.20765758]}
          userData={{ name: 'NECK' }}
        />
        <mesh
          name="LEGS"
          castShadow
          receiveShadow
          geometry={nodes.LEGS.geometry}
          material={materials['Material.011']}
          position={[0.00481525, 4.96720552, 0.33483559]}
          rotation={[-0.00004198, -0.00019044, 0.00115213]}
          scale={[0.54523492, 1.72270107, 0.34900141]}
          userData={{ name: 'LEGS' }}
        />
        <mesh
          name="aRMS"
          castShadow
          receiveShadow
          geometry={nodes.aRMS.geometry}
          material={materials['Material.006']}
          position={[0.32891774, 4.51422548, 0.39866883]}
          rotation={[0.01206153, 0.01779311, 0.1335134]}
          scale={[0.60566872, 1.04906166, 0.30460978]}
          userData={{ name: 'aRMS' }}
        />
        <mesh
          name="shorts"
          castShadow
          receiveShadow
          geometry={nodes.shorts.geometry}
          material={materials['Material.009']}
          position={[0.00838558, 5.00606394, 0.36715826]}
          rotation={[0.03376368, 0.01387638, 0.01003241]}
          scale={[0.59219033, 1.87105918, 0.3790572]}
          userData={{ name: 'shorts' }}
        />
        <mesh
          name="shirt"
          castShadow
          receiveShadow
          geometry={nodes.shirt.geometry}
          material={nodes.shirt.material}
          position={[0.32891774, 4.51422548, 0.39866883]}
          rotation={[0.01206153, 0.01779311, 0.1335134]}
          scale={[0.60566872, 1.04906166, 0.30460978]}
          userData={{ name: 'shirt' }}
        />
        <mesh
          name="LEGS001"
          castShadow
          receiveShadow
          geometry={nodes.LEGS001.geometry}
          material={materials['Material.008']}
          position={[0.00481525, 4.96720552, 0.33483559]}
          rotation={[-0.00004198, -0.00019044, 0.00115213]}
          scale={[0.54523492, 1.72270107, 0.34900141]}
          userData={{ name: 'LEGS.001' }}
        />
        <mesh
          name="LEGS002"
          castShadow
          receiveShadow
          geometry={nodes.LEGS002.geometry}
          material={materials['Material.010']}
          position={[0.00481525, 4.96720552, 0.33483559]}
          rotation={[-0.00004198, -0.00019044, 0.00115213]}
          scale={[0.54523492, 1.72270107, 0.34900141]}
          userData={{ name: 'LEGS.002' }}
        />
        <mesh
          name="Head"
          castShadow
          receiveShadow
          geometry={nodes.Head.geometry}
          material={materials['Material.004']}
          position={[0, 6.2395463, 0]}
          scale={[0.66845131, 0.66845131, 0.66845131]}
          userData={{ name: 'Head' }}
        />
        <mesh
          name="Ears"
          castShadow
          receiveShadow
          geometry={nodes.Ears.geometry}
          material={materials['Material.005']}
          position={[-0.6639697, 6.2840004, 0.31955105]}
          rotation={[1.60629149, 0.00865687, 0.2391203]}
          scale={[0.18815909, 0.03333417, 0.18815914]}
          userData={{ name: 'Ears' }}
        />
        <mesh
          name="Eyes"
          castShadow
          receiveShadow
          geometry={nodes.Eyes.geometry}
          material={materials['Material.001']}
          position={[0.2144188, 6.53345776, -0.50512576]}
          rotation={[0.18652512, 0.22662392, 0.01534704]}
          scale={[0.05938037, 0.09338962, 0.02269922]}
          userData={{ name: 'Eyes' }}
        />
        <mesh
          name="Hair"
          castShadow
          receiveShadow
          geometry={nodes.Hair.geometry}
          material={materials['Material.002']}
          position={[0.00364742, 6.21911335, 0.00480925]}
          scale={[0.70466483, 0.70496672, 0.70496672]}
          userData={{ name: 'Hair' }}
        />
        <mesh
          name="Cap"
          castShadow
          receiveShadow
          geometry={nodes.Cap.geometry}
          material={materials.Material}
          position={[0.01902328, 6.21152067, -0.10670903]}
          rotation={[0.32055401, -0.02403242, 0.03884221]}
          scale={[0.7076956, 0.78419209, 0.77045935]}
          userData={{ name: 'Cap' }}
        />
        <mesh
          name="Brim"
          castShadow
          receiveShadow
          geometry={nodes.Brim.geometry}
          material={materials['Material.003']}
          position={[0.01561345, 6.20101166, -0.05566957]}
          rotation={[0.36406913, -0.04649672, 0.01970669]}
          scale={[0.78938425, 0.78938431, 0.78938454]}
          userData={{ name: 'Brim' }}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/hamster.glb')